{"version":3,"sources":["components/default.png","components/default2.png","components/lightningTiny.png","components/Card.js","components/CardList.js","components/Victory.js","components/StartPage.js","components/Scroll.js","containers/ErrorBoundary.js","components/Header.js","containers/App.js","index.js"],"names":["module","exports","counter","Card","props","srcImg","pid","arr","defaultImg","defaultImg2","className","alt","src","lightning","onError","event","target","setAttribute","username","substring","divStyle","gridColumn","display","justifyContent","gridTemplateColumns","gridTemplateRows","gridGap","CardList","robots","style","map","robot","key","id","email","Victory","totalClicks","seconds","StartPage","Scroll","boxSizing","padding","overflowY","border","height","width","zIndex","children","ErrorBoundary","state","hasError","error","info","this","setState","Component","divStyle1","divStyle2","lineHeight","Header","textAlign","cardToCheck","busy","matchedCards","App","useState","setRobots","cards","setCards","setSeconds","step","setStep","setTotalClicks","start","setStart","cardMatch","card1","card2","console","log","numRobots","length","document","querySelector","classList","add","flipCard","card","includes","canFlipCard","checkForCardMatch","getCardType","getElementsByClassName","setTimeout","remove","startGame","i","order","unShuffleCards","forEach","randIndex","Math","floor","random","temp","shuffleCards","cardValues","querySelectorAll","useEffect","fetch","then","response","json","data","slice","pidnr","ceil","String","Number","totRob","flat","cardsArray","Array","from","overlays","overlay","addEventListener","timer","setInterval","clearInterval","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.ab9bbd72.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/default.b9dc8cd5.png\";","module.exports = __webpack_public_path__ + \"static/media/default2.97645085.png\";","module.exports = __webpack_public_path__ + \"static/media/lightningTiny.fd831b85.png\";","import React from 'react';\nimport './Card.css'\nimport './Overlay.css'\nimport lightning from \"./lightningTiny.png\";\nimport defaultImg from \"./default.png\";\nimport defaultImg2 from \"./default2.png\";\n\nlet counter = 0\n\nconst Card = (props) => {\n\tlet srcImg = `https://robohash.org/set_set1/${props.pid}?size=150x150`\n\tconst arr = [defaultImg,defaultImg,defaultImg2,defaultImg2]\n\t\n\tconst getDefaultImg = (event) => {\n\t\tevent.target.setAttribute(\"src\", arr[counter])\n\t\tcounter++\n\t}\n\n\treturn(\n\t\t<div className=\"card grows\">\n\t\t\t<div className=\"card-back card-face\">\n\t\t\t\t<img alt=\"\" src={ lightning } />\n\t\t\t</div>\n\t\t\t<div className=\"card-front card-face\">\n\t\t\t\t<img className=\"card-value\" onError={ getDefaultImg } src={ srcImg } alt=\"\"/>\n\t\t\t\t<h3>{props.username.substring(0,8)}</h3>\t\n\t\t\t</div >\n\t\t</div>\n\t);\n};\n\nexport default Card;","import React from 'react';\nimport Card from './Card';\n\nfunction CardList({robots}) {\n\n\treturn (\n\t\t<div style={divStyle}>\n\t\t\t{\n\t\t\t\trobots.map((robot) => {\n\t\t\t\t\treturn (<Card \n\t\t\t\t\t\t\tkey={robot.id} \n\t\t\t\t\t\t\tid={robot.id} \n\t\t\t\t\t\t\tusername={robot.username} \n\t\t\t\t\t\t\temail={robot.email}\n\t\t\t\t\t\t\tpid = {robot.pid}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t)\n\t\t\t\t})\n\t\t\t}\n\t\t</div>\n\t);\n};\n\nconst divStyle = {\n\tgridColumn: '1 / -1',\n\tdisplay: 'grid',\n\tjustifyContent: 'center',\n\tgridTemplateColumns: 'repeat(6, 150px)',\n\tgridTemplateRows: '200px 200px 200px',\n\tgridGap: '1em',\n\t// margin: '1em'\n}\n\nexport default CardList;\n\n","import React from 'react';\nimport './Overlay.css'\n\nfunction Victory({totalClicks, seconds}) {\n  return (\n    <div className={'overlay victory'}>\n        <div className={'overlay-text'}> \n          <h1> Well done </h1>\n          <h2> Total Score: {1000 - totalClicks - seconds} </h2>\n          <br></br>\n          <h3> (Click here to play again!) </h3>\n        </div>\n    </div> \n  )\n}\n\nexport default Victory\n  ","import React from 'react';\nimport './Overlay.css'\n\nfunction StartPage() {\n  return (\n    <div className={'overlay visible'}>\n        <div className={'overlay-text'}> \n          <h1> Welcome </h1>\n          <br></br>\n          <h2> (Click here to play!) </h2>\n        </div>\n    </div> \n  )\n}\n\nexport default StartPage\n  ","import React from 'react';\n\nconst Scroll = (props) => {\n\treturn (\n\t\t<div style={{boxSizing: 'border-box', padding: '10px', overflowY: 'auto', border: '5px solid black', height: '90vh', width: '100wh', zIndex:'1'}}>\n\t\t\t{props.children}\n\t\t</div>\n\t);\n\t// console.log(props);\n};\n\nexport default Scroll;","import React, {Component} from 'react';\n\nclass ErrorBoundary extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\thasError: false\n\t\t}\n\t}\n\n\tcomponentDidCatch(error, info) {\n\t\tthis.setState({ hasError: true})\n\t}\n\n\trender () {\n\t\tif (this.state.hasError) {\n\t\t\treturn <h1> Something went wrong </h1>\n\t\t}\n\n\t\treturn this.props.children;\n\t}\n}\n\nexport default ErrorBoundary;","import React from 'react';\n\nfunction Header({seconds,totalClicks}) {\n  return (\n    <div style={divStyle1}>\n      <div style={divStyle2}>\n        <div style={{textAlign:'right'}}><h2>Clicks:</h2></div>\n        <div><h2>{totalClicks}</h2></div>\n        <div style={{textAlign:'center'}}><h1>RoboMemory </h1></div>\n        <div style={{textAlign:'right'}}><h2>Time:</h2></div>\n        <div><h2>{seconds}</h2></div>\n      </div>\n    </div> \n  );\n}\nconst divStyle1 = {\n  height: '10vh'\n}\n\nconst divStyle2 = {\n  lineHeight: '10vh',\n\tdisplay: 'grid',\n\tgridTemplateColumns: '15% 10% 50% 15% 10%',\n}\n        \nexport default Header;","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, {useState, useEffect} from 'react';\nimport CardList from '../components/CardList';\n// import { robots } from '../robots';\nimport Victory from '../components/Victory';\nimport StartPage from '../components/StartPage';\nimport Scroll from '../components/Scroll';\nimport './App.css'\nimport ErrorBoundary from './ErrorBoundary'\nimport Header from '../components/Header'\n\nlet cardToCheck = null;\nlet busy = true\nlet matchedCards = []\nconst numRobots = 9\n\nfunction App() {\n\n\tconst [robots, setRobots] = useState([]);\n\tconst [cards, setCards] = useState([])\n\tconst [seconds, setSeconds] = useState(0)\n\tconst [step, setStep] = useState(0)\n\tconst [totalClicks, setTotalClicks] = useState(0)\n\tconst [start, setStart] = useState(false)\n\n\tconst showCards = () => {\n\t\tcards.forEach(card => card.classList.add('visible'))\n\t}\n\n\tconst hideCards = () => {\n\t\tcards.forEach(card => card.classList.remove('visible'))\n\t}\n\n\tconst unShuffleCards = () => {\n\t\tfor (let i =0; i < cards.length; i++) {\n\t\t\tcards[i].style.order = i+1;\n\t\t}\n\t}\n\n\tconst shuffleCards = () => {\n\t\t// console.log(\"Shuffling\")\n\t\tfor (let i =0; i < cards.length; i++) {\n\t\t\tcards[i].style.order = i+1;\n\t\t}\n\t\tfor(let i = cards.length-1; i > 0; i--) {\n\t\t\tlet randIndex = Math.floor(Math.random() * (i+1));\n\t\t\tlet temp = cards[randIndex].style.order\n\t\t\tcards[randIndex].style.order = cards[i].style.order;\n\t\t\tcards[i].style.order = temp;\n\t\t}\n\t}\n\n\tconst victory = () => {\n\t\tsetStep(0)\n\t\tconst overlayVictory = document.querySelector('.overlay.victory')\n\t\toverlayVictory.classList.add('visible')\n\t\tmatchedCards = []\n\t\tsetStart(false)\n\t}\n\n\tconst cardMatch = (card1, card2) => {\n\t\tmatchedCards = [...matchedCards,card1,card2];\n\t\tconsole.log(matchedCards)\n\t\tconsole.log(card1)\n\t\t// card1.classList.add('matched');\n\t\t// card2.classList.add('matched');\n\t\t// this.audioController.match();\n\t\tif (matchedCards.length === numRobots*2) {\n\t\t\tvictory(); \n\t\t}\n\t}\n\tconst cardMisMatch = (card1, card2) => {\n\t\t\tbusy = true\n\t\t\tsetTimeout(() => {\n\t\t\t\t\tcard1.classList.remove('visible');\n\t\t\t\t\tcard2.classList.remove('visible');\n\t\t\t\t\tbusy = false\n\t\t\t}, 1000);\n\t}\n\n\tconst canFlipCard = (card) => {\n\t\treturn !busy && !matchedCards.includes(card) && card !== cardToCheck;\n\t}\n\n\tconst flipCard = (card) => {\n\t\tif(canFlipCard(card)) {\n\t\t\tif(step === 0) {\n\t\t\t\tsetStep(1)\n\t\t\t}\n\t\t\t// this.audioController.flip();\n\t\t\tsetTotalClicks((totalClicks) => totalClicks + 1)\n\t\t\tcard.classList.add('visible');\n\n\t\t\tif(cardToCheck) {\n\t\t\t\tconsole.log(\"Inside cardToCheck\")\n\t\t\t\tcheckForCardMatch(card);\n\t\t\t} else {\n\t\t\t\tcardToCheck = card;\n\t\t\t\tconsole.log(\"Outside cardToCheck\")\n\t\t\t}\n\t\t}\n\t}\n\n\tconst getCardType = (card) => {\n\t\treturn card.getElementsByClassName('card-value')[0].src;\n\t}\n\n\tconst checkForCardMatch = (card) => {\n\t\tif(getCardType(card) === getCardType(cardToCheck))\n\t\t\t\tcardMatch(card, cardToCheck);\n\t\telse \n\t\t\t\tcardMisMatch(card, cardToCheck);\n\n\t\tcardToCheck = null;\n\t}\n\n\tconst startGame = () => {\n\t\tsetSeconds(0)\n\t\tsetTotalClicks(0)\n\t\tunShuffleCards()\n\t\tshowCards()\n\t\tconsole.log(robots)\n\t\tif (true) {\n\t\t\tconsole.log(\"inside startGame\")\n\t\t}\n\t\tbusy = true;\n\t\tsetTimeout(() => {\n\t\t\t// this.audioController.startMusic();\n\t\t\tshuffleCards();\n\n\t\t\tbusy = false;\n\t\t}, 2500);\n\t\tsetTimeout(() => hideCards(), 2000);\n\t\tconst cardValues = document.querySelectorAll('.card-back')\n\t\tsetTimeout(() => {\n\t\t\tfor (let card of cardValues) {\n\t\t\t\tcard.classList.add('hidden')\n\t\t\t}\n\t\t},2000)\n\t\tsetTimeout(() => {\n\t\t\tfor (let card of cardValues) {\n\t\t\t\tcard.classList.remove('hidden')\n\t\t\t}\n\t\t},3000)\n\t}\n\n\tuseEffect(() => {\n\t\tfetch('https://jsonplaceholder.typicode.com/users')\n\t\t\t.then(response => response.json())\n\t\t\t.then(data => data.slice(0,numRobots).map(robot => {\n\t\t\t\tlet pidnr = robot.id*10 + Math.ceil(Math.random()*10)\n\t\t\t\treturn [ {...robot, pid: String(pidnr) },{...robot,id: Number(robot.id)+numRobots, pid: String(pidnr) } ]\n\t\t\t}))\n\t\t\t.then(totRob => setRobots(totRob.flat(1)))\n\t}, [])\n\n\tuseEffect(() => {\n\t\tif (robots.length) {\n\t\t\tconst cardsArray = Array.from(document.querySelectorAll('.card'))\n\t\t\tconst overlays = Array.from(document.querySelectorAll('.overlay'))\n\t\t\t\n\t\t\tif (overlays.length) {\n\t\t\t\tconsole.log('overlays')\n\t\t\t\tfor (const overlay of overlays) {\n\t\t\t\t\toverlay.addEventListener('click', () => {\n\t\t\t\t\t\toverlay.classList.remove('visible')\n\t\t\t\t\t\tsetStart(true)\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (cardsArray.length) {\n\t\t\t\tfor (const card of cardsArray) {\n\t\t\t\t\tcard.addEventListener('click', () => {\n\t\t\t\t\t\tflipCard(card)\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\tsetCards(cardsArray)\n\t\t\t}\n\t\t}\n\t}, [robots]);\n\n\tuseEffect(() => {\n\t\tif(start) \n\t\t\tstartGame()\n\t}, [start])\n\n  useEffect(() => {\n\t\tconst timer = setInterval(() => {\n\t\t\tsetSeconds(seconds => seconds + step);\n\t\t}, 1000);\n\t\t// componentWillUnmount\n\t\treturn () => clearInterval(timer)\n  }, [step]);\n\n\treturn (!robots.length ? \n\t\t<h1> Loading </h1> :\n\t\t(\n\t\t\t<div>\n\t\t\t\t<Header seconds={seconds} totalClicks={totalClicks} />\n\t\t\t\t<StartPage />\n\t\t\t\t<Scroll >\n\t\t\t\t\t<ErrorBoundary>\n\t\t\t\t\t\t<CardList robots={robots} />\n\t\t\t\t\t</ErrorBoundary>\n\t\t\t\t</Scroll>\n\t\t\t\t<Victory seconds={seconds} totalClicks={totalClicks}/>\n\t\t\t</div>\n\t\t)\n\t)\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App'; \nimport 'tachyons';\n\nReactDOM.render(<App/>, document.getElementById('root'));\n"],"sourceRoot":""}